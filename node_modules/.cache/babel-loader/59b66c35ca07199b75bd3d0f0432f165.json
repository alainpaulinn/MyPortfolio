{"ast":null,"code":"import _asyncToGenerator from\"C:\\\\Users\\\\Alain Paulin\\\\Documents\\\\GitHub\\\\MyPortfolio\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _slicedToArray from\"C:\\\\Users\\\\Alain Paulin\\\\Documents\\\\GitHub\\\\MyPortfolio\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\Alain Paulin\\\\Documents\\\\GitHub\\\\MyPortfolio\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{useState,useEffect}from'react';var API_TOKEN=process.env.REACT_APP_API_TOKEN;function useFetch(url){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],setLoading=_useState6[1];useEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res,json;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setLoading(true);_context.prev=1;_context.next=4;return fetch(url,{method:'GET',headers:{'Content-type':'application/json','Authorization':\"Bearer \".concat(API_TOKEN)// notice the Bearer before your token\n}// body: JSON.stringify(yourNewData)\n});case 4:res=_context.sent;console.log(\"res\",res);_context.next=8;return res.json();case 8:json=_context.sent;setData(json);setLoading(false);_context.next=16;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](1);setError(_context.t0);case 16:case\"end\":return _context.stop();}}},_callee,null,[[1,13]]);}));return function fetchData(){return _ref.apply(this,arguments);};}();fetchData();},[url]);return{loading:loading,error:error,data:data};}export default useFetch;","map":{"version":3,"sources":["C:/Users/Alain Paulin/Documents/GitHub/MyPortfolio/src/hooks/useFetch.js"],"names":["useState","useEffect","API_TOKEN","process","env","REACT_APP_API_TOKEN","useFetch","url","data","setData","error","setError","loading","setLoading","fetchData","fetch","method","headers","res","console","log","json"],"mappings":"2bAAA,OAAQA,QAAR,CAAkBC,SAAlB,KAAkC,OAAlC,CAEA,GAA2BC,CAAAA,SAA3B,CAAwCC,OAAO,CAACC,GAAhD,CAAOC,mBAAP,CAEA,QAASC,CAAAA,QAAT,CAAkBC,GAAlB,CAAuB,CACrB,cAAwBP,QAAQ,CAAC,IAAD,CAAhC,wCAAOQ,IAAP,eAAaC,OAAb,eACA,eAA0BT,QAAQ,CAAC,IAAD,CAAlC,yCAAOU,KAAP,eAAcC,QAAd,eACA,eAA8BX,QAAQ,CAAC,IAAD,CAAtC,yCAAOY,OAAP,eAAgBC,UAAhB,eAEAZ,SAAS,CAAC,UAAI,CACZ,GAAMa,CAAAA,SAAS,0FAAG,gJACdD,UAAU,CAAC,IAAD,CAAV,CADc,sCAIQE,CAAAA,KAAK,CAACR,GAAD,CAAK,CACxBS,MAAM,CAAE,KADgB,CAExBC,OAAO,CAAE,CACL,eAAgB,kBADX,CAEL,iCAA2Bf,SAA3B,CAAwC;AAFnC,CAIT;AANwB,CAAL,CAJb,QAIJgB,GAJI,eAYVC,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAmBF,GAAnB,EAZU,sBAaSA,CAAAA,GAAG,CAACG,IAAJ,EAbT,QAaJA,IAbI,eAcVZ,OAAO,CAACY,IAAD,CAAP,CACAR,UAAU,CAAC,KAAD,CAAV,CAfU,iFAiBVF,QAAQ,aAAR,CAjBU,qEAAH,kBAATG,CAAAA,SAAS,0CAAf,CAoBAA,SAAS,GACV,CAtBQ,CAsBN,CAACP,GAAD,CAtBM,CAAT,CAwBA,MAAM,CAACK,OAAO,CAAPA,OAAD,CAAUF,KAAK,CAALA,KAAV,CAAiBF,IAAI,CAAJA,IAAjB,CAAN,CACD,CAED,cAAeF,CAAAA,QAAf","sourcesContent":["import {useState, useEffect} from 'react'\r\n\r\nconst {REACT_APP_API_TOKEN:API_TOKEN} = process.env\r\n\r\nfunction useFetch(url) {\r\n  const [data, setData] = useState(null)\r\n  const [error, setError] = useState(null)\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(()=>{\r\n    const fetchData = async () =>{\r\n        setLoading(true)\r\n\r\n        try {\r\n            const res = await fetch(url,{\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'Authorization': `Bearer ${API_TOKEN}`, // notice the Bearer before your token\r\n                },\r\n                // body: JSON.stringify(yourNewData)\r\n            })\r\n            console.log(\"res\", res)\r\n            const json = await res.json()\r\n            setData(json)\r\n            setLoading(false)\r\n        } catch (fetchError) {\r\n            setError(fetchError)\r\n        }\r\n    }\r\n    fetchData()\r\n  }, [url])\r\n\r\n  return{loading, error, data}\r\n}\r\n\r\nexport default useFetch"]},"metadata":{},"sourceType":"module"}