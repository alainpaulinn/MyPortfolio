{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { ListActionTypes, listReducer } from '../useList';\nexport default function menuReducer(state, action) {\n  if (action.type === ListActionTypes.itemHover) {\n    return state;\n  }\n\n  const newState = listReducer(state, action); // make sure an item is always highlighted\n\n  if (newState.highlightedValue === null && action.context.items.length > 0) {\n    return _extends({}, newState, {\n      highlightedValue: action.context.items[0]\n    });\n  }\n\n  if (action.type === ListActionTypes.keyDown) {\n    if (action.event.key === 'Escape') {\n      return _extends({}, newState, {\n        open: false\n      });\n    }\n  }\n\n  if (action.type === ListActionTypes.blur) {\n    var _action$context$listb;\n\n    if (!((_action$context$listb = action.context.listboxRef.current) != null && _action$context$listb.contains(action.event.relatedTarget))) {\n      return _extends({}, newState, {\n        open: false,\n        highlightedValue: action.context.items[0]\n      });\n    }\n  }\n\n  return newState;\n}","map":{"version":3,"sources":["C:/Users/Alain Paulin/Documents/GitHub/MyPortfolio/node_modules/@mui/base/useMenu/menuReducer.js"],"names":["_extends","ListActionTypes","listReducer","menuReducer","state","action","type","itemHover","newState","highlightedValue","context","items","length","keyDown","event","key","open","blur","_action$context$listb","listboxRef","current","contains","relatedTarget"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,YAA7C;AACA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;AACjD,MAAIA,MAAM,CAACC,IAAP,KAAgBL,eAAe,CAACM,SAApC,EAA+C;AAC7C,WAAOH,KAAP;AACD;;AACD,QAAMI,QAAQ,GAAGN,WAAW,CAACE,KAAD,EAAQC,MAAR,CAA5B,CAJiD,CAMjD;;AACA,MAAIG,QAAQ,CAACC,gBAAT,KAA8B,IAA9B,IAAsCJ,MAAM,CAACK,OAAP,CAAeC,KAAf,CAAqBC,MAArB,GAA8B,CAAxE,EAA2E;AACzE,WAAOZ,QAAQ,CAAC,EAAD,EAAKQ,QAAL,EAAe;AAC5BC,MAAAA,gBAAgB,EAAEJ,MAAM,CAACK,OAAP,CAAeC,KAAf,CAAqB,CAArB;AADU,KAAf,CAAf;AAGD;;AACD,MAAIN,MAAM,CAACC,IAAP,KAAgBL,eAAe,CAACY,OAApC,EAA6C;AAC3C,QAAIR,MAAM,CAACS,KAAP,CAAaC,GAAb,KAAqB,QAAzB,EAAmC;AACjC,aAAOf,QAAQ,CAAC,EAAD,EAAKQ,QAAL,EAAe;AAC5BQ,QAAAA,IAAI,EAAE;AADsB,OAAf,CAAf;AAGD;AACF;;AACD,MAAIX,MAAM,CAACC,IAAP,KAAgBL,eAAe,CAACgB,IAApC,EAA0C;AACxC,QAAIC,qBAAJ;;AACA,QAAI,EAAE,CAACA,qBAAqB,GAAGb,MAAM,CAACK,OAAP,CAAeS,UAAf,CAA0BC,OAAnD,KAA+D,IAA/D,IAAuEF,qBAAqB,CAACG,QAAtB,CAA+BhB,MAAM,CAACS,KAAP,CAAaQ,aAA5C,CAAzE,CAAJ,EAA0I;AACxI,aAAOtB,QAAQ,CAAC,EAAD,EAAKQ,QAAL,EAAe;AAC5BQ,QAAAA,IAAI,EAAE,KADsB;AAE5BP,QAAAA,gBAAgB,EAAEJ,MAAM,CAACK,OAAP,CAAeC,KAAf,CAAqB,CAArB;AAFU,OAAf,CAAf;AAID;AACF;;AACD,SAAOH,QAAP;AACD","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { ListActionTypes, listReducer } from '../useList';\nexport default function menuReducer(state, action) {\n  if (action.type === ListActionTypes.itemHover) {\n    return state;\n  }\n  const newState = listReducer(state, action);\n\n  // make sure an item is always highlighted\n  if (newState.highlightedValue === null && action.context.items.length > 0) {\n    return _extends({}, newState, {\n      highlightedValue: action.context.items[0]\n    });\n  }\n  if (action.type === ListActionTypes.keyDown) {\n    if (action.event.key === 'Escape') {\n      return _extends({}, newState, {\n        open: false\n      });\n    }\n  }\n  if (action.type === ListActionTypes.blur) {\n    var _action$context$listb;\n    if (!((_action$context$listb = action.context.listboxRef.current) != null && _action$context$listb.contains(action.event.relatedTarget))) {\n      return _extends({}, newState, {\n        open: false,\n        highlightedValue: action.context.items[0]\n      });\n    }\n  }\n  return newState;\n}"]},"metadata":{},"sourceType":"module"}