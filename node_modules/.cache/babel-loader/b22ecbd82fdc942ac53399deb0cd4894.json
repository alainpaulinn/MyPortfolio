{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nconst token = process.env.API_TOKEN;\n\nfunction useFetch() {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(url => {\n    const fetchData = async () => {\n      setLoading(true);\n\n      try {\n        const res = await fetch(url, {\n          method: 'GET',\n          headers: {\n            'Content-type': 'application/json',\n            'Authorization': `Bearer ${token}` // notice the Bearer before your token\n\n          } // body: JSON.stringify(yourNewData)\n\n        });\n        const json = res.json();\n        setData(json);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n      }\n    };\n  }, [url]);\n  return {\n    loading,\n    error,\n    data\n  };\n}\n\n_s(useFetch, \"cdnblwmK9QuMyYTkxGRQb1PLKRw=\");\n\nexport default useFetch;","map":{"version":3,"sources":["C:/Users/Alain Paulin/Documents/GitHub/MyPortfolio/src/hooks/useFetch.js"],"names":["useState","useEffect","token","process","env","API_TOKEN","useFetch","data","setData","error","setError","loading","setLoading","url","fetchData","res","fetch","method","headers","json"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAACC,GAAR,CAAYC,SAA1B;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAEY,GAAD,IAAO;AACf,UAAMC,SAAS,GAAG,YAAW;AACzBF,MAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,UAAI;AACA,cAAMG,GAAG,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAK;AACxBI,UAAAA,MAAM,EAAE,KADgB;AAExBC,UAAAA,OAAO,EAAE;AACL,4BAAgB,kBADX;AAEL,6BAAkB,UAAShB,KAAM,EAF5B,CAE+B;;AAF/B,WAFe,CAMxB;;AANwB,SAAL,CAAvB;AAQA,cAAMiB,IAAI,GAAGJ,GAAG,CAACI,IAAJ,EAAb;AACAX,QAAAA,OAAO,CAACW,IAAD,CAAP;AACAP,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAZD,CAYE,OAAOH,KAAP,EAAc;AACZC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACH;AACJ,KAlBD;AAmBD,GApBQ,EAoBN,CAACI,GAAD,CApBM,CAAT;AAsBA,SAAM;AAACF,IAAAA,OAAD;AAAUF,IAAAA,KAAV;AAAiBF,IAAAA;AAAjB,GAAN;AACD;;GA5BQD,Q;;AA8BT,eAAeA,QAAf","sourcesContent":["import {useState, useEffect} from 'react'\r\n\r\nconst token = process.env.API_TOKEN\r\n\r\nfunction useFetch() {\r\n  const [data, setData] = useState(null)\r\n  const [error, setError] = useState(null)\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect((url)=>{\r\n    const fetchData = async () =>{\r\n        setLoading(true)\r\n\r\n        try {\r\n            const res = await fetch(url,{\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`, // notice the Bearer before your token\r\n                },\r\n                // body: JSON.stringify(yourNewData)\r\n            })\r\n            const json = res.json()\r\n            setData(json)\r\n            setLoading(false)\r\n        } catch (error) {\r\n            setError(error)\r\n        }\r\n    }\r\n  }, [url])\r\n\r\n  return{loading, error, data}\r\n}\r\n\r\nexport default useFetch"]},"metadata":{},"sourceType":"module"}