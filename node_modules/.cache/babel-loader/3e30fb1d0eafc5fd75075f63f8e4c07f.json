{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alain Paulin\\\\Documents\\\\GitHub\\\\MyPortfolio\\\\src\\\\contexts\\\\theme.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\n\nconst ThemeProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [themeName, setThemeName] = useState('light');\n  useEffect(() => {\n    const darkMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    setThemeName(darkMediaQuery.matches ? 'dark' : 'light');\n    darkMediaQuery.addEventListener('change', e => {\n      setThemeName(e.matches ? 'dark' : 'light');\n    });\n  }, []);\n\n  const toggleTheme = () => {\n    const name = themeName === 'dark' ? 'light' : 'dark';\n    localStorage.setItem('themeName', name);\n    setThemeName(name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: [{\n      themeName,\n      toggleTheme\n    }],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ThemeProvider, \"SuRQqTvpA2I4PIgWuFEVm/A8+ME=\");\n\n_c = ThemeProvider;\nThemeProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport { ThemeProvider, ThemeContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["C:/Users/Alain Paulin/Documents/GitHub/MyPortfolio/src/contexts/theme.js"],"names":["createContext","useEffect","useState","PropTypes","ThemeContext","ThemeProvider","children","themeName","setThemeName","darkMediaQuery","window","matchMedia","matches","addEventListener","e","toggleTheme","name","localStorage","setItem","propTypes","node","isRequired"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,YAAY,gBAAGJ,aAAa,EAAlC;;AAEA,MAAMK,aAAa,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACtC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,OAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,cAAc,GAAGC,MAAM,CAACC,UAAP,CAAkB,8BAAlB,CAAvB;AACAH,IAAAA,YAAY,CAACC,cAAc,CAACG,OAAf,GAAyB,MAAzB,GAAkC,OAAnC,CAAZ;AACAH,IAAAA,cAAc,CAACI,gBAAf,CAAgC,QAAhC,EAA2CC,CAAD,IAAO;AAC/CN,MAAAA,YAAY,CAACM,CAAC,CAACF,OAAF,GAAY,MAAZ,GAAqB,OAAtB,CAAZ;AACD,KAFD;AAGD,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMG,WAAW,GAAG,MAAM;AACxB,UAAMC,IAAI,GAAGT,SAAS,KAAK,MAAd,GAAuB,OAAvB,GAAiC,MAA9C;AACAU,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCF,IAAlC;AACAR,IAAAA,YAAY,CAACQ,IAAD,CAAZ;AACD,GAJD;;AAMA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE,CAAC;AAAET,MAAAA,SAAF;AAAaQ,MAAAA;AAAb,KAAD,CAA9B;AAAA,cACGT;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAtBD;;GAAMD,a;;KAAAA,a;AAwBNA,aAAa,CAACc,SAAd,GAA0B;AACxBb,EAAAA,QAAQ,EAAEH,SAAS,CAACiB,IAAV,CAAeC;AADD,CAA1B;AAIA,SAAShB,aAAT,EAAwBD,YAAxB","sourcesContent":["import { createContext, useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ThemeContext = createContext()\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const [themeName, setThemeName] = useState('light')\r\n\r\n  useEffect(() => {\r\n    const darkMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\r\n    setThemeName(darkMediaQuery.matches ? 'dark' : 'light')\r\n    darkMediaQuery.addEventListener('change', (e) => {\r\n      setThemeName(e.matches ? 'dark' : 'light')\r\n    });\r\n  }, [])\r\n\r\n  const toggleTheme = () => {\r\n    const name = themeName === 'dark' ? 'light' : 'dark'\r\n    localStorage.setItem('themeName', name)\r\n    setThemeName(name)\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={[{ themeName, toggleTheme }]}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nThemeProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport { ThemeProvider, ThemeContext }\r\n"]},"metadata":{},"sourceType":"module"}