{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Alain Paulin\\\\Documents\\\\GitHub\\\\MyPortfolio\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import{createContext,useEffect,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";var ThemeContext=/*#__PURE__*/createContext();var ThemeProvider=function ThemeProvider(_ref){var children=_ref.children;var _useState=useState('light'),_useState2=_slicedToArray(_useState,2),themeName=_useState2[0],setThemeName=_useState2[1];useEffect(function(){var darkMediaQuery=window.matchMedia('(prefers-color-scheme: dark)');setThemeName(darkMediaQuery.matches?'dark':'light');darkMediaQuery.addEventListener('change',function(e){setThemeName(e.matches?'dark':'light');});},[]);var toggleTheme=function toggleTheme(){var name=themeName==='dark'?'light':'dark';localStorage.setItem('themeName',name);setThemeName(name);};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:[{themeName:themeName,toggleTheme:toggleTheme}],children:children});};export{ThemeProvider,ThemeContext};","map":{"version":3,"sources":["C:/Users/Alain Paulin/Documents/GitHub/MyPortfolio/src/contexts/theme.js"],"names":["createContext","useEffect","useState","ThemeContext","ThemeProvider","children","themeName","setThemeName","darkMediaQuery","window","matchMedia","matches","addEventListener","e","toggleTheme","name","localStorage","setItem"],"mappings":"mJAAA,OAASA,aAAT,CAAwBC,SAAxB,CAAmCC,QAAnC,KAAmD,OAAnD,C,2CAGA,GAAMC,CAAAA,YAAY,cAAGH,aAAa,EAAlC,CAEA,GAAMI,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,CACtC,cAAkCH,QAAQ,CAAC,OAAD,CAA1C,wCAAOI,SAAP,eAAkBC,YAAlB,eAEAN,SAAS,CAAC,UAAM,CACd,GAAMO,CAAAA,cAAc,CAAGC,MAAM,CAACC,UAAP,CAAkB,8BAAlB,CAAvB,CACAH,YAAY,CAACC,cAAc,CAACG,OAAf,CAAyB,MAAzB,CAAkC,OAAnC,CAAZ,CACAH,cAAc,CAACI,gBAAf,CAAgC,QAAhC,CAA0C,SAACC,CAAD,CAAO,CAC/CN,YAAY,CAACM,CAAC,CAACF,OAAF,CAAY,MAAZ,CAAqB,OAAtB,CAAZ,CACD,CAFD,EAGD,CANQ,CAMN,EANM,CAAT,CAQA,GAAMG,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,GAAMC,CAAAA,IAAI,CAAGT,SAAS,GAAK,MAAd,CAAuB,OAAvB,CAAiC,MAA9C,CACAU,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAkCF,IAAlC,EACAR,YAAY,CAACQ,IAAD,CAAZ,CACD,CAJD,CAMA,mBACE,KAAC,YAAD,CAAc,QAAd,EAAuB,KAAK,CAAE,CAAC,CAAET,SAAS,CAATA,SAAF,CAAaQ,WAAW,CAAXA,WAAb,CAAD,CAA9B,UACGT,QADH,EADF,CAKD,CAtBD,CA4BA,OAASD,aAAT,CAAwBD,YAAxB","sourcesContent":["import { createContext, useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ThemeContext = createContext()\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const [themeName, setThemeName] = useState('light')\r\n\r\n  useEffect(() => {\r\n    const darkMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\r\n    setThemeName(darkMediaQuery.matches ? 'dark' : 'light')\r\n    darkMediaQuery.addEventListener('change', (e) => {\r\n      setThemeName(e.matches ? 'dark' : 'light')\r\n    });\r\n  }, [])\r\n\r\n  const toggleTheme = () => {\r\n    const name = themeName === 'dark' ? 'light' : 'dark'\r\n    localStorage.setItem('themeName', name)\r\n    setThemeName(name)\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={[{ themeName, toggleTheme }]}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nThemeProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport { ThemeProvider, ThemeContext }\r\n"]},"metadata":{},"sourceType":"module"}