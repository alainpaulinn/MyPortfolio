{"ast":null,"code":"import GitHubIcon from'@material-ui/icons/GitHub';import LaunchIcon from'@material-ui/icons/Launch';import'./ProjectContainer.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ProjectContainer=function ProjectContainer(_ref){var project=_ref.project;var name=project.name,livePreviewUrl=project.livePreviewUrl,sourceCodeUrl=project.sourceCodeUrl,description=project.description,stack=project.stack;return/*#__PURE__*/_jsxs(\"div\",{className:\"project\",children:[/*#__PURE__*/_jsx(\"h3\",{children:name}),/*#__PURE__*/_jsx(\"p\",{className:\"project__description\",children:description}),stack.data.length>0&&/*#__PURE__*/_jsx(\"ul\",{className:\"project__stack\",children:stack.data.map(function(item){return/*#__PURE__*/_jsx(\"li\",{className:\"project__stack-item\",children:item.attributes.name},item.id);})}),sourceCodeUrl&&/*#__PURE__*/_jsx(\"a\",{href:sourceCodeUrl,\"aria-label\":\"source code\",className:\"link link--icon\",children:/*#__PURE__*/_jsx(GitHubIcon,{})}),livePreviewUrl&&/*#__PURE__*/_jsx(\"a\",{href:livePreviewUrl,\"aria-label\":\"live preview\",className:\"link link--icon\",children:/*#__PURE__*/_jsx(LaunchIcon,{})})]});};export default ProjectContainer;","map":{"version":3,"sources":["C:/Users/Alain Paulin/Documents/GitHub/MyPortfolio/src/components/ProjectContainer/ProjectContainer.js"],"names":["GitHubIcon","LaunchIcon","ProjectContainer","project","name","livePreviewUrl","sourceCodeUrl","description","stack","data","length","map","item","attributes","id"],"mappings":"AAAA,MAAOA,CAAAA,UAAP,KAAuB,2BAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,2BAAvB,CACA,MAAO,wBAAP,C,wFAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,MAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CAExC,GAAQC,CAAAA,IAAR,CAAoED,OAApE,CAAQC,IAAR,CAAcC,cAAd,CAAoEF,OAApE,CAAcE,cAAd,CAA8BC,aAA9B,CAAoEH,OAApE,CAA8BG,aAA9B,CAA6CC,WAA7C,CAAoEJ,OAApE,CAA6CI,WAA7C,CAA0DC,KAA1D,CAAoEL,OAApE,CAA0DK,KAA1D,CACA,mBACE,aAAK,SAAS,CAAC,SAAf,wBACE,oBAAKJ,IAAL,EADF,cAGE,UAAG,SAAS,CAAC,sBAAb,UAAqCG,WAArC,EAHF,CAIGC,KAAK,CAACC,IAAN,CAAWC,MAAX,CAAoB,CAApB,eACC,WAAI,SAAS,CAAC,gBAAd,UACGF,KAAK,CAACC,IAAN,CAAWE,GAAX,CAAe,SAACC,IAAD,qBACd,WAAkB,SAAS,CAAC,qBAA5B,UACGA,IAAI,CAACC,UAAL,CAAgBT,IADnB,EAASQ,IAAI,CAACE,EAAd,CADc,EAAf,CADH,EALJ,CAcGR,aAAa,eACZ,UACE,IAAI,CAAEA,aADR,CAEE,aAAW,aAFb,CAGE,SAAS,CAAC,iBAHZ,uBAKE,KAAC,UAAD,IALF,EAfJ,CAwBGD,cAAc,eACb,UACE,IAAI,CAAEA,cADR,CAEE,aAAW,cAFb,CAGE,SAAS,CAAC,iBAHZ,uBAKE,KAAC,UAAD,IALF,EAzBJ,GADF,CAmCD,CAtCD,CAwCA,cAAeH,CAAAA,gBAAf","sourcesContent":["import GitHubIcon from '@material-ui/icons/GitHub'\r\nimport LaunchIcon from '@material-ui/icons/Launch'\r\nimport './ProjectContainer.css'\r\n\r\nconst ProjectContainer = ({ project }) => {\r\n\r\n  const { name, livePreviewUrl, sourceCodeUrl, description, stack } = project\r\n  return (\r\n    <div className='project'>\r\n      <h3>{name}</h3>\r\n\r\n      <p className='project__description'>{description}</p>\r\n      {stack.data.length > 0 && (\r\n        <ul className='project__stack'>\r\n          {stack.data.map((item) => (\r\n            <li key={item.id} className='project__stack-item'>\r\n              {item.attributes.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n\r\n      {sourceCodeUrl && (\r\n        <a\r\n          href={sourceCodeUrl}\r\n          aria-label='source code'\r\n          className='link link--icon'\r\n        >\r\n          <GitHubIcon />\r\n        </a>\r\n      )}\r\n\r\n      {livePreviewUrl && (\r\n        <a\r\n          href={livePreviewUrl}\r\n          aria-label='live preview'\r\n          className='link link--icon'\r\n        >\r\n          <LaunchIcon />\r\n        </a>\r\n      )}\r\n    </div>)\r\n}\r\n\r\nexport default ProjectContainer\r\n"]},"metadata":{},"sourceType":"module"}